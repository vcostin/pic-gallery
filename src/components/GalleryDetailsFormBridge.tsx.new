'use client';

import React, { useEffect } from 'react';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { CreateGallerySchema } from '@/lib/schemas';
import { GalleryDetailsFormWithZod } from './GalleryDetailsFormWithZod';
import type { GalleryFormData } from './GalleryDetailsFormWithZod';
import logger from '@/lib/logger';

/**
 * Legacy props interface for backward compatibility
 */
interface LegacyGalleryDetailsProps {
  // Basic gallery details
  title?: string;
  setTitle?: (title: string) => void;
  description?: string;
  setDescription?: (description: string) => void;
  isPublic?: boolean;
  setIsPublic?: (isPublic: boolean) => void;
  // Theming options
  themeColor?: string | null;
  setThemeColor?: (themeColor: string) => void;
  backgroundColor?: string | null;
  setBackgroundColor?: (backgroundColor: string) => void;
  backgroundImageUrl?: string | null;
  setBackgroundImageUrl?: (backgroundImageUrl: string) => void;
  accentColor?: string | null;
  setAccentColor?: (accentColor: string) => void;
  fontFamily?: string | null;
  setFontFamily?: (fontFamily: string) => void;
  displayMode?: string | null;
  setDisplayMode?: (displayMode: string) => void;
  layoutType?: string | null;
  setLayoutType?: (layoutType: string) => void;
}

/**
 * @deprecated Use GalleryDetailsFormWithZod directly in new code.
 * This bridge component exists to support legacy components during migration.
 */
export function GalleryDetailsFormBridge({
  // Legacy props
  title = '',
  setTitle,
  description = '',
  setDescription,
  isPublic = false,
  setIsPublic,
  themeColor = '',
  setThemeColor,
  backgroundColor = '',
  setBackgroundColor,
  backgroundImageUrl = '',
  setBackgroundImageUrl,
  accentColor = '',
  setAccentColor,
  fontFamily = '',
  setFontFamily,
  displayMode = 'carousel',
  setDisplayMode,
  layoutType = 'contained',
  setLayoutType,
}: LegacyGalleryDetailsProps) {
  // Set up form with Zod validation
  const { register, formState } = useForm<GalleryFormData>({
    resolver: zodResolver(CreateGallerySchema),
    defaultValues: {
      title,
      description,
      isPublic,
      themeColor: themeColor || '',
      backgroundColor: backgroundColor || '',
      backgroundImageUrl: backgroundImageUrl || '',
      accentColor: accentColor || '',
      fontFamily: fontFamily || '',
      displayMode: displayMode || 'carousel',
      layoutType: layoutType || 'contained',
    }
  });
  
  // Create a placeholder control object compatible with GalleryDetailsFormWithZod
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const control = {} as any;
  
  // Show deprecation warning in development
  useEffect(() => {
    if (process.env.NODE_ENV === 'development') {
      logger.warn('GalleryDetailsFormBridge is deprecated. Use GalleryDetailsFormWithZod directly.');
    }
  }, []);
  
  // Handle field changes to update parent component state
  const handleFieldChange = (field: keyof GalleryFormData, value: string | boolean) => {
    switch (field) {
      case 'title':
        setTitle?.(value as string);
        break;
      case 'description':
        setDescription?.(value as string);
        break;
      case 'isPublic':
        setIsPublic?.(value as boolean);
        break;
      case 'themeColor':
        setThemeColor?.(value as string);
        break;
      case 'backgroundColor':
        setBackgroundColor?.(value as string);
        break;
      case 'backgroundImageUrl':
        setBackgroundImageUrl?.(value as string);
        break;
      case 'accentColor':
        setAccentColor?.(value as string);
        break;
      case 'fontFamily':
        setFontFamily?.(value as string);
        break;
      case 'displayMode':
        setDisplayMode?.(value as string);
        break;
      case 'layoutType':
        setLayoutType?.(value as string);
        break;
    }
  };
  
  return (
    <GalleryDetailsFormWithZod
      register={register}
      control={control}
      errors={formState.errors}
      onChange={handleFieldChange}
    />
  );
}

// Re-export the GalleryFormData type for convenience
export type { GalleryFormData };
